name: üöÄ Deploy SmartLead

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
      
    - name: üöÄ Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: root
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          echo "üöÄ Deploy SmartLead"
          
          cd /root
          
          # Clone ou update do repositorio
          if [ ! -d "test_smartlead" ]; then
            git clone https://github.com/jeanasilva/test_smartlead.git test_smartlead
          else
            cd test_smartlead
            # Verificar se h√° commits locais e descartar tudo
            echo "üîÑ Verificando e limpando altera√ß√µes locais..."
            git fetch origin
            git reset --hard HEAD
            git clean -fd
            git checkout main
            git reset --hard origin/main
            git pull origin main
            cd ..
          fi
          
          cd test_smartlead
          
          # Criar .env.prod
          cat > .env.prod << EOF
          APP_NAME="SmartLead API"
          APP_ENV=production
          APP_DEBUG=false
          APP_KEY=${{ secrets.APP_KEY }}
          APP_URL=https://smartlead.jeansilva.dev.br
          
          DB_CONNECTION=mysql
          DB_HOST=db
          DB_PORT=3306
          DB_DATABASE=smartlead_db
          DB_USERNAME=smartlead
          DB_PASSWORD=testpassword
          MYSQL_ROOT_PASSWORD=rootpassword
          
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          
          REDIS_HOST=redis
          REDIS_PASSWORD=null
          REDIS_PORT=6379
          
          MAIL_MAILER=smtp
          MAIL_HOST=smtp.zoho.com
          MAIL_PORT=587
          MAIL_USERNAME=offboard@offboard.com.br
          MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
          MAIL_ENCRYPTION=tls
          MAIL_FROM_ADDRESS=offboard@offboard.com.br
          MAIL_FROM_NAME="SmartLead"
          
          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug
          
          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          EOF
          
          # Parar containers antigos se existirem
          docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
          
          # Build e subir containers
          docker-compose -f docker-compose.prod.yml up -d --build
          
          # Aguardar containers iniciarem
          sleep 10
          
          # Copiar .env.prod para dentro do container
          docker cp .env.prod smartlead_app:/var/www/html/.env
          
          # Executar migrations e seeders apenas se necess√°rio
          docker exec smartlead_app php artisan migrate --force 2>/dev/null || true
          
          # Gerar documenta√ß√£o Swagger
          docker exec smartlead_app php artisan l5-swagger:generate
          
          # Limpar cache
          docker exec smartlead_app php artisan config:clear
          docker exec smartlead_app php artisan cache:clear
          
          echo "‚úÖ Deploy conclu√≠do com sucesso!"
